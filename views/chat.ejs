<!DOCTYPE html>
<html lang="pt-br">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Chat com Assistentes EnergIA</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/css/bootstrap.min.css" integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" crossorigin="anonymous">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <script src="https://cdn.jsdelivr.net/npm/marked/marked.min.js"></script>
    <style>
        body {
            background: #f7f7f7;
            font-family: Arial, sans-serif;
            color: #333;
        }

        .chat-container {
            max-width: 800px;
            margin: 20px auto;
            padding: 20px;
            border-radius: 15px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            background-color: #fff;
        }

        .chat-window {
            height: 60vh;
            overflow-y: auto;
            border-bottom: 2px solid #e0e0e0;
            padding: 15px;
            margin-bottom: 20px;
        }

        .message {
            display: flex;
            align-items: flex-start;
            margin-bottom: 15px;
        }

        .user-message {
            justify-content: flex-end;
            text-align: right;
        }

        .assistant-message {
            justify-content: flex-start;
            text-align: left;
        }

        .message-content {
            max-width: 70%;
            padding: 10px 15px;
            border-radius: 15px;
            font-size: 1rem;
        }

        .user-message .message-content {
            background-color: #9af79f;
            align-self: flex-end;
        }

        .assistant-message .message-content {
            background-color: #cad6cc;
        }

        .assistant-type {
            font-weight: bold;
            font-size: 0.85rem;
            margin-bottom: 5px;
        }

        .chat-input-container {
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .chat-input {
            flex-grow: 1;
            padding: 10px;
            font-size: 1rem;
            border-radius: 10px;
            border: 1px solid #ccc;
        }

        .send-button {
            background-color: #01EA41;
            border: none;
            padding: 10px 20px;
            border-radius: 10px;
            color: #fff;
            font-weight: bold;
            cursor: pointer;
            transition: background-color 0.3s;
        }

        .send-button:hover {
            background-color: #009D17;
        }
    </style>
</head>
<body>

    <div class="chat-container">
        <div class="chat-window" id="chat-window">
            <% if (messages && messages.length > 0) { %>
              <% messages.forEach(message => { %>
                <div class="message <%= message.sender === 'user' ? 'user-message' : 'assistant-message' %>">
                  <div class="message-content">
                    <%= message.content %>
                  </div>
                </div>
              <% }) %>
            <% } else { %>
              <p class="text-muted">Nenhuma mensagem no histórico.</p>
            <% } %>
        </div>
          
        <div class="chat-input-container">
            <input type="text" id="chat-input" class="chat-input" placeholder="Digite sua mensagem..." required>
            <button id="send-button" class="send-button">Enviar</button>
        </div>
    </div>

    <script>
        function nl2br(str) {
            return str.replace(/\n/g, '<br>');
        }

        function formatResponse(str) {
            return str
                .replace(/\*\*(.*?)\*\*/g, '<b>$1</b>')
                .replace(/\n/g, '<br>');
        }

        document.getElementById('send-button').addEventListener('click', function() {
            const messageInput = document.getElementById('chat-input');
            const message = messageInput.value.trim();
            const chatWindow = document.getElementById('chat-window');

            if (message.length > 0) {
                // Exibe imediatamente a mensagem do usuário
                chatWindow.innerHTML += `
                    <div class="message user-message">
                        <div class="message-content">${message}</div>
                    </div>
                `;
                chatWindow.scrollTop = chatWindow.scrollHeight;
                messageInput.value = '';

                // Adiciona balão de loading do assistente
                const spinnerId = 'spinner-' + Date.now();
                chatWindow.innerHTML += `
                    <div class="message assistant-message" id="${spinnerId}">
                        <div class="message-content" style="display:flex;align-items:center;gap:10px;">
                            <img src="/public/load.gif" alt="Carregando..." style="width:50px;height:50px;">
                        </div>
                    </div>
                `;
                chatWindow.scrollTop = chatWindow.scrollHeight;

                // Enviar a mensagem para o backend
                fetch('/chat/message', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ message })
                })
                .then(response => response.json())
                .then(data => {
                    // Substitui o balão de loading pela resposta do assistente
                    const spinnerDiv = document.getElementById(spinnerId);
                    if (spinnerDiv) {
                        spinnerDiv.innerHTML = `
                            <div class="message-content">
                                <div class="assistant-type">${data.assistantType}</div>
                                ${formatResponse(data.response)}
                            </div>
                        `;
                    }
                    chatWindow.scrollTop = chatWindow.scrollHeight;
                })
                .catch(err => {
                    // Em caso de erro, remove o spinner e mostra mensagem de erro
                    const spinnerDiv = document.getElementById(spinnerId);
                    if (spinnerDiv) {
                        spinnerDiv.innerHTML = `
                            <div class="message-content text-danger">
                                Erro ao enviar mensagem. Tente novamente.
                            </div>
                        `;
                    }
                    console.error('Erro ao enviar mensagem:', err);
                });
            }
        });

        // Enviar ao pressionar "Enter"
        document.getElementById('chat-input').addEventListener('keypress', function(e) {
            if (e.key === 'Enter') {
                e.preventDefault();
                document.getElementById('send-button').click();
                this.value = '';
            }
        });
    </script>
</body>
</html>
